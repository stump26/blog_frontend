{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/moidp/CloudStation/sangwook/Programing/project/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/mnt/c/Users/moidp/CloudStation/sangwook/Programing/project/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/moidp/CloudStation/sangwook/Programing/project/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/mnt/c/Users/moidp/CloudStation/sangwook/Programing/project/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport jwt from 'jsonwebtoken';\nimport ApolloClient from './apolloClient';\nimport { Home, Editor, Post, About, Auth } from './pages';\nimport { DarkModeContext, UserInfoContext } from './context.js';\nimport NavBar from './component/NavBar';\nimport Footer from './component/Footer';\nimport './App.scss';\nexport default (function () {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  var darkActions = {\n    toggleDarkMode: function () {\n      var _toggleDarkMode = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setDarkMode(!darkMode);\n                localStorage.setItem('isDark', !darkMode);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function toggleDarkMode() {\n        return _toggleDarkMode.apply(this, arguments);\n      }\n\n      return toggleDarkMode;\n    }()\n  };\n  var userActions = {\n    setUserInfoContext: function setUserInfoContext(userInfoDic) {\n      setUserInfo(userInfoDic);\n    },\n    decodeJWTPayload: function decodeJWTPayload() {\n      var token = sessionStorage.getItem('token');\n\n      if (token) {\n        var _jwt$decode = jwt.decode(token),\n            userId = _jwt$decode._id,\n            username = _jwt$decode.username,\n            authority = _jwt$decode.authority;\n\n        return authority;\n      }\n\n      return false;\n    }\n  }; // componentDidMount\n\n  useEffect(function () {\n    var historyDark = localStorage.getItem('isDark'); // console.log('TCL: App -> historyDark', historyDark);\n\n    if (historyDark === 'true') {\n      // console.log('TCL: load localstorage');\n      setDarkMode(true);\n    } else if ((historyDark === undefined || historyDark === null) && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      // console.log('TCL: load prefers-color-scheme');\n      setDarkMode(true);\n    }\n  }, []); // componentDidUpdate\n\n  useEffect(function () {\n    document.getElementsByTagName('body')[0].classList.toggle('dark-mode', darkMode);\n  });\n  return React.createElement(React.Fragment, null, React.createElement(ApolloProvider, {\n    client: ApolloClient\n  }, React.createElement(BrowserRouter, null, React.createElement(DarkModeContext.Provider, {\n    value: _objectSpread({\n      darkMode: darkMode\n    }, darkActions)\n  }, React.createElement(UserInfoContext.Provider, {\n    value: _objectSpread({\n      userInfo: userInfo\n    }, userActions)\n  }, React.createElement(\"div\", {\n    className: \"App\"\n  }, React.createElement(NavBar, null), React.createElement(React.Fragment, null, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/editor/:postid\",\n    component: Editor\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/editor/\",\n    component: Editor\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/post/:id\",\n    component: Post\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/aboutMe\",\n    component: About\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/auth\",\n    component: Auth\n  })), React.createElement(Footer, null)))))));\n});","map":null,"metadata":{},"sourceType":"module"}